INSERT INTO book_status (status_name) VALUES ('AVAILABLE');
INSERT INTO book_status (status_name) VALUES ('AWAITING');
INSERT INTO book_status (status_name) VALUES ('BORROWED');
INSERT INTO book_status (status_name) VALUES ('RESERVED');
INSERT INTO book_status (status_name) VALUES ('UNAVAILABLE');

INSERT INTO book_category (book_category_name) VALUES ('guide');
INSERT INTO book_category (book_category_name) VALUES ('programming');
INSERT INTO book_category (book_category_name) VALUES ('education');
INSERT INTO book_category (book_category_name) VALUES ('astronomy');
INSERT INTO book_category (book_category_name) VALUES ('science');
INSERT INTO book_category (book_category_name) VALUES ('java');
INSERT INTO book_category (book_category_name) VALUES ('c++');
INSERT INTO book_category (book_category_name) VALUES ('cpp');
INSERT INTO book_category (book_category_name) VALUES ('javascript');
INSERT INTO book_category (book_category_name) VALUES ('react');
INSERT INTO book_category (book_category_name) VALUES ('frontend');
INSERT INTO book_category (book_category_name) VALUES ('testing');
INSERT INTO book_category (book_category_name) VALUES ('design');
INSERT INTO book_category (book_category_name) VALUES ('lte');
INSERT INTO book_category (book_category_name) VALUES ('managment');

INSERT INTO address (building, city) VALUES ('West Link', 'Wrocław');
INSERT INTO address (building, city) VALUES ('Eest Link', 'Wrocław');
INSERT INTO address (building, city) VALUES ('Blue Tower', 'Wrocław');

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('user@user.com', 'User', 'User', '$2a$10$q42WZU7b.2emX8QlMwWV/.WWY.hSAB5by6mI1Tkq58XMi7ij0KbBy', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('wojtek@admin.com', 'Wojtek', 'Wojciechowski', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('jacek@admin.com', 'Jacek', 'Jackowski', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('alex@admin.com', 'Alex', 'Alexowski', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('mikolaj@admin.com', 'Mikołaj', 'Mikołajski', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id)
VALUES ('janusz.kowalski@user.com', 'Janusz', 'Kowalski', '$2a$10$q42WZU7b.2emX8QlMwWV/.WWY.hSAB5by6mI1Tkq58XMi7ij0KbBy', 1);

INSERT INTO "user" (email, first_name, last_name, password, address_id, is_account_active)
VALUES ('admin@admin.com', 'Admin', 'Adminowski', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1, true);

INSERT INTO "user" (email, first_name, last_name, password, address_id, is_account_active)
VALUES ('nokia.library@gmail.com', 'Nokia', 'Library', '$2a$10$Ro6ctBdfMovhKqJdYFgnrO58tTf3uQ7hrY9tm93Uclb0fiP3fQMKS', 1, true);

INSERT INTO role (role) VALUES ('ROLE_EMPLOYEE');
INSERT INTO role (role) VALUES ('ROLE_ADMIN');
INSERT INTO user_roles (user_id, roles_id) VALUES (1, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (2, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (2, 2);
INSERT INTO user_roles (user_id, roles_id) VALUES (3, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (3, 2);
INSERT INTO user_roles (user_id, roles_id) VALUES (4, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (4, 2);
INSERT INTO user_roles (user_id, roles_id) VALUES (5, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (5, 2);
INSERT INTO user_roles (user_id, roles_id) VALUES (6, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (7, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (7, 2);
INSERT INTO user_roles (user_id, roles_id) VALUES (8, 1);
INSERT INTO user_roles (user_id, roles_id) VALUES (8, 2);

INSERT INTO author (author_full_name, is_removable) VALUES ('Philip Romanik', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Amy Muntz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Etienne Wenger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Patrick Lencioni', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary Hamel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrei Alexandrescu', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sreekrishnan Venkateswaran', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christopher Hallinan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Herb Sutter', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen D. Huston', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas C. Schmidt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Barbara E. Moo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Koenig', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey Pfeffer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert I. Sutton', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('red. prowadzący Tomasz Janoś', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert C. Martin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul M. Duvall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael C. Feathers', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ken Schwaber', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mike Beedle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gerard Meszaros', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Diana Larsen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Esther Derby', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kent Beck', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jenifer Tidwell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Clemens Szyperski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William Opdyke', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Martin Fowler', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Brant', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Don Roberts', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Doug Lea', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joshua Bloch', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jenifer TidwellBrian Goetz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joseph Bowbeer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Holmes', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tim Peierls', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruce Eckel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jerzy Grębosz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen Prata', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jesper Pedersen et al.', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Matthias Kalle Dalheimer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stanley B.Lipman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeff Garlan Richard Anthony', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('opracowanie zbiorowe', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew J. Viterbi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Erik Dahlman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Per Beming', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stefan Parkvall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Johan Skold', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tektronix Berlin GmbH & Co', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('KG', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thierry Lucidarme', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pierre Lescuyer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrzej Niemczyk', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anna Niemczyk', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jan Mądry', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Hunt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Hunt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Manfred Nuber', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rainer Handel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stefan Shroeder', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cynthia Anders', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Randall Hyde', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Donald E. Knuth', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rick Mugridge', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ward Cunningham', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John L.Hennessy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David A. Patterson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Barr & Anthony Massa', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen C. Dewhurst', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ron Patton', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joshua Kerievsky', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('N/A', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Chris Crouch', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pat Nickerson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alec Mackenzie', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David E. Simon', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('James R. Trott', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alan Shalloway', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mary and Tom Poppendieck', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andreas Zeller', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Loughran', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Erik Hatcher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kevin A. Lee', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Holzner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alistair Cockburn', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Norman Matloff', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter Jay Salzman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Henrik Kniberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul Hamill', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard D. Lewis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Terttu Leney', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bas Vodde', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Craig Larman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Martin Sauter', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Lakos', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey K. Linker', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mike Cohn', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel Pravat', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mario Hewardt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Colin Willbock', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas Deiss', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stefan Keil', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephan Tobies', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bert Bates', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kathy Sierra', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Arnold Robbins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard McDougall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jim Mauro', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael D. Bauer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul DuBois', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dan Rubel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eric Clayberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Neal Gafter', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Shelley Powers', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mike Loukides', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jerry Peek', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tim O''Reilly', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Klaus Schmidt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Erich Gamma', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lee Nackman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Wiegand', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Raj Jain', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mahbub Hassan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nathan Torkington', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tom Christiansen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Amr Elssamadisy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Liz Sedley', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rachel Davies', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David West', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brett D. McLaughlin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary pollice', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bill Calkins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Astels', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Terry Camerlengo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Monkhouse', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Charlie Russel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jason Gerend', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sharon Crawford', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mauricio Arregoces', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marizio Portolani', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mike Wilson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steva Northhover', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lasse Koskela', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Benjamin C. Pierce', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eric Freeman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Elisabeth Freeman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kimball Fisher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve McConnell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Miro Samek', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. Richard Hackman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hans Van Vliet', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sean Convery', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Phillip A. Laplante', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Colin J. Neil', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nancy Walsh', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Lidie', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ralph Johnson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Vlissides', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard Helm', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Scott Meyers', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('P.J. Plauger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nicolai M. Josuttis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Harvey Deitel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul Deitel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jonathan P. Castro', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anita Rosen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Larry Wall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jon Orwant', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bennet P. Lientz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lee Larssen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Barbara Moo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Koening', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ken Jones', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brant B. Welch', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joel Spolsky', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('B. Walke', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('M. P. Althoff', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('P. Seidenberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Judy McKay', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Graham Bath', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Vandevoorde', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. Cichocki', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. kołakowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Love', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alessandro Rubini', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Greg Kroah-Hartman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jonathan Corbet', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('T. Rudebusch', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('R. Kreher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anne Mette', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jonassen Hass', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruno Clerckx', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Claude Oestges', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Travis Russell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Microsoft course', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Loutfi Nuaymi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rajeev S. Koodli', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Charles E. Perkins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Harri Holma', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Antti Toskala', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rex Black', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey Bannister', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul Mather', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sebastian Coope', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Thomas', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ian Paterson-Stephens', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Bateman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard G. Lyons', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('W. Richard Stevens', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('James Noble', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Charles Weir', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Kilts', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey D. Ullman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Monica S. Lam', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alfred V. Aho', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ravi Sethi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('R. W. Hamming', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mathew Wilson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary Chefetz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dale Howard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sam Siewert', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas L. Perry', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rias Muhamed', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Arunabha Ghosh', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey G. Andrews', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marc J. Rochkind', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian Hook', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Abrahams', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Aleksey Gurtovoy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tom DeMarco', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Timothy Lister', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mark Lutz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen W. Smith', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen A. Rago', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hays W. ''Skip'' McCormick III', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William J. Brown', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas J. Mowbray', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Raphael C. Malveau', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary R. Wright', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Allan M. Stavely', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Margaret A. Ellis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bjarne Stroustrup', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Volei A. Pedroni', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jacob West', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian Chess', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christoph Rauscher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruce Powel Douglass', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert V. Binder', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Barr', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jack Ganssle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Vinoski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michi Henning', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William T. Vetterling', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian P. Flannery', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Saul A. Teukolsky', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William H. Press', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Flavio Muratore', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Raymond Steele', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lajos Hanzo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Scott Hauck', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andre Dehon', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Greg Gagne', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Abraham Sielberschatz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter Baer Galvin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Catsoulis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Frantisek Franek', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pete Becker', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John R. Levine', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lloyd G. Williams', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Connie U. Smith', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marco Cesati', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel P. Bovet', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Amol Lad', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sriram Neelakandan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('P. Raghavan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Niklaus Wirth', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stanley B. Lippman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen R. Covey', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ken Blanchard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Spencer Johnson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hal Burrows', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William Oncken Jr.', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('IBM', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Project Managment Institute', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen Withall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jim Collins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Karl E. Wiegers', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alfie Kohn', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Renee Baron', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bjorn Karlsson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eric S. Roberts', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen Berczuk', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas Alger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jan Ellsberger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dieter Hogrefe', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Tockey', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alex Vrenios', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Frederick P. Brooks Jr', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard F. Raposa', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dafydd Stuttard and Marcus Pinto', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gladeana McMahon', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anne Archer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('McAffer Jeff VanderLei Paul Archer Simon', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('McAffer Jeff Lemieux Jean-Michel Aniszczyk Chris', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rainsberger J.B.', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Summerfield Mark', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Abbott Doug', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Donald G. Reinertsen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter M. Senge', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joseph G. Ecker', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anna Struzinska-Walczak          Krzysztof Walczak', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joe Celko', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jan L.Harrington', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Zbigniew Rastabiga', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michal Florys', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Corey Ladas', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Martin Logan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jez Humble', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('peter seibel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Lopp', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gayle Laakmann', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Elmasri Navathe', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steven S. Skiena', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen H. Kan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Joe Armstrong', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Mayhew', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dov Bulka', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Johanna Rothman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruce Tate', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stanley Selkow', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('George Heineman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andy Hunt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dennis Shasha', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William Wake', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jurgen Appelo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eliyahu M. Goldratt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeff Cox', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Chris Johnson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Farooq Khan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Moray Rumney', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Neil Johnson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jesse Lyn Stoner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Laurence Hawkins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Susan Fowler', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gerald M. Weinberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter Hruschka', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Suzanne Robertson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steven McMenamin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('James Robertson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ben Casnocha', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John C. Maxwell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pamela Slim', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Donald C. Gause', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('jessica livingston', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul D. Tieger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Barbara Barron', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Seppo Hamalainen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Henning Sanneck', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cinzia Sartori', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stephen J. Dubner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steven D. Levitt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Elbert Hannah', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Linda Lamb', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel H. Pink', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steven Levy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jim Highsmith', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Issam Toufik', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stefania Sesia', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Matthew Baker', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dean Leffingwell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Kotter', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christina Gessner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Hiebel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Heinz Mellein', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Reinhold Kruger', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Venkat Subramaniam', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ka Wai Cheung', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Craig Walls', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Juergen Placht', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ralf Kreher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Torsten Ruedebusch', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Juha Salmelin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Esa Metsala', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Chad Fowler', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Anshul Gupta', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Vipin Kumar', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ananth Grama', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('George Karypis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Lorber', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eunice Parisi-Carew', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Donald Carew', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dick Ruhe', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul J. Meyer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Don Shula', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel Kahneman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. Stewart Black', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hal B Gregersen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('George Kohlrieser', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Elfriede Dustin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas A. Kimber', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eric Bauer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Xuemei Zhang', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Javan Erfanian', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hung Nguyen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter Wills', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Karl F. Rauscher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('K. Daniel Wong', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas Croda', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Xavier Fernando', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gustavo Giannattasio', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Niovi Pavlidou', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dan Fox', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Leliwa Sp. z o. o.', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kewin Wallace', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Hucaby', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Wendel Odom', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mark Grayson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Scott Wainner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kevin Shatzkamer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Martin J. Feuerstein', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Yasmin Karimli', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pablo Tapia', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steve Freeman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nat Pryce', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tomasz Kaczanowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marcin Lis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jon Bentley', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Janet Gregory', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lisa Crispin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michal Bartyzel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cay S.Horstmann', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary Cornell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian Komar', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ben Smith', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Krzysztof Wesolowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter C. Patton', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bijay K. Jayaswal', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffrey J. Fox', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Wesley Chun', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeff Forcier', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Paul Bissex', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tim Parker', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William R. Stanek', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christopher Scordo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tim Bagnall', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rita Mulcahy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Wright', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian Tracy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Garry Ridge', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Stenbeck', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Wojciech Kabacinski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Grzegorz Danilewicz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. D. Parsons', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Harry R. Anderson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dave Meier', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Chris Kormanyos', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lukasz Sosna', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Holger Schwichtenberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bartosz Danowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brian P. Hogan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marek Serafin', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('James F. Kurose', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Keith W. Ross', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hazarathaiah Malepati', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('training materials', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Chuck Allison', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Williams Anthony', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Fa-Long Luo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Vinay K. Ingle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John G. Proakis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Masound Salehi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ruth Colvin Clark', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Clifford Stein', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cherles E. Leiserson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas H. Cormen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ronald L. Rivest', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel Kline', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kevin E.Kline', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Brand Hunt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrzej Kierzkowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Hudson Paul', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Laura Lemay', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Leon Atkinson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Zeev Suraski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alvin Alexander', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Butcher Paul', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruce A Tate Fred Daoud Ian Dees Jack Moffitt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Warburton Richard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Max Kanat-Alexander', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Allen B. Downey', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eric Evans', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dan Pilone', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Russ Miles', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kevlin Henney', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Charles Petzold', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dustin Boswell', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Trevor Foucher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Greg Wilson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andy Oram', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marshall B. Rosenberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lyssa Adkins', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ken Martin  and Bill Hoffman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('SungJun Park', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('SungHoon Jung', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('SungDuck Chun', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('SeungJune Yi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('YoungDee Lee', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Art Byrne', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Matusewicz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lukasz Grzadko', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Artur Kochowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michal Bartkowiak', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Slawomir Zborowski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christopher G.Lasater', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Adam Drozdek', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Matthew Wilson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andy Kirby', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Pawel Majdzik', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jonathan Rasmusson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Roy Osherove', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marc Gregorie', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jeffry G. Andrews', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('zhang jun', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stepanov Alexander', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Daniel E. Rose', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dake Liu', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('white elecia', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('ahmadi sassan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('NOKIA', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Scott Blanchard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('TECHCOM Consulting', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andreas Annen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('SIEMENS', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nancy Mingus', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('praca zbiorowa', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Barry J. Rosenberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sun Technical Publications', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('JoAnn T. Hackos', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alan S. Pringle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sarah S. O''Keefe', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William Strunk Jr', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('J. Roberto B. De Marca', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kwang-Cheng Chen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Microsoft', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Syed Ahson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mohammad Ilyas', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Allan Reid', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mark Ibbotson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Keith Kelly', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Martin Hewings', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Virginia Evans', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tim Szigeti', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christina Hattingh', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Harry G. Perros', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Norman Whitby', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sam McCarter', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Albert Ellis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Arthur Lange', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Eknath Easwaran', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Janice Redish', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Timo Halonen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Juan Melero', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Javier Romero', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stewart Mader', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Magazine', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Richard L. Hamilton', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tony Self', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Candace Matthews', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tanya Peterson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Diane Martinez', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Carolyn Stevenson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Carrie Hannigan', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jorg Henning', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marita Tjarks-Sobhani', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michelle Carey', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jenifer Schlotfeldt', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Laura Bellamy', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nokia', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Juha Korhonen', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alex Gillespie', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas Starr', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Massimo Sorbara', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter J. Silverman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John M. Cioffi', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Barbee Davis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sploty', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Frederic Laloux', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Freddy Balle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Balle', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Edgar H. Schein', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Taiichi Ohno', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Allen C. Ward', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Durward K. Sobek II', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('W. Edwards Deming', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Roger Schwarz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Henry Kimsey- House', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Scott Adams', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Mayo', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jacek Wozniak', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Farley', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('James Bach', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cem Kaner', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bret Pettichord', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sam Newman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jennifer Greene', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew Stellman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Milosz Brzezinski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mariusz Chrapko', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mariusz Kapusta', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Aaron J. Shenhar', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dov Dvir', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Project Management Institute', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dom Wydawniczy Anna Adamczyk', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Autor autor', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('John Snow', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Diana Lea', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Collin McIntosh', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('The University of Chicago Press', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Rick McDonald', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Vaughan Jones', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sue Kay', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Adrian Farrel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Philip Kerr', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ceri Jones', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Wayne Lewis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Alexander Giulietti', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Liesbet Van der Perre', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Bruno Bougard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Maxime Pelcat', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Davide Di Gennaro', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Cisco Learning Product', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stefan Zeidenitz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sahoko Kaji', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Nick Yapp', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ewa Lipniacka', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Zhu Song', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('William Ury', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Roger Fisher', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas Stone', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gojko Adzic', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Luke Hohmann', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ronald R. Lehmann', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Ellen Gottesdiener', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Tarja Moles', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Harold Abelson and Gerald Jay Sussman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Harper', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Andrew W. Appel', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Steven S. Muchnick', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Geoff Watts', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Roman Pichler', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mark Schwartz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Peter Senge', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Luciano Ramalho', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gabriele Lanaro', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Miguel Grinberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Robert Shimonski', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jason van Gumster', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Adriaan de Jonge', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Adam Freeman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Lea Verou', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sean P. Kane', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Karl Matthias', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Haralambos Marmanis', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Dmitry Babenko', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas McIlwraith', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Stoyan Stefanov', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Christian Bauer', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gary Gregory', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Gavin King', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('David Herman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jon Duckett', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Douglas Crockford', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Simon Timms', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Kyle Simpson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Mateusz Grzesiak', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Jaroslaw Szostka', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Michael Kerrisk', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Randal W. Beard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Sam Ruby', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Neuland', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Karolina Zmitrowicz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Adam Roman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Naim Dahnoun', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('GlobalStandard', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Czachorski Tadeusz', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Thomas Erikson', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Beata Rzepka', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Curt Coffman', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Marcus Buckingham', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('S.Wrycza', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('Olof Liberg', false);
INSERT INTO author (author_full_name, is_removable) VALUES ('E. Douglas Jensen', false);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780321108944', 'Applied C++ : Practical Techniques for Building Better Software', 'This is an insightful guide to efficient, practical solutions to real-world C++ problems. Concrete case studies run throughput the book and show how to develop quality C++ software.', 'http://books.google.com/books/content?id=xzbRQXXsy6UC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 1);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 1);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('xdmjavtkaa', 1, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,1);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('jbguyqjdzr', 1, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,2);
INSERT INTO book_details_authors VALUES (1, 1);
INSERT INTO book_details_authors VALUES (1, 2);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780521663632', 'Communities of Practice', 'Learning is becoming an urgent topic. Nations worry about the learning of their citizens, companies about the learning of their workers, schools about the learning of their students. But it is not always easy to think about how to foster learning in innovative ways. This book presents a framework for doing that, with a social theory of learning that is ground-breaking yet accessible, with profound implications not only for research, but also for all those who have to foster learning as part of their responsibilites at work, at home, at school.', 'http://books.google.com/books/content?id=heBZpgYUKdAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '1999-09-28', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 3);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 3);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cmzmmvsmpx', 2, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,3);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('zkzpxohmhp', 2, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,4);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('trvlysecpu', 2, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,5);
INSERT INTO book_details_authors VALUES (2, 3);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788380874015', 'The Five Dysfunctions of a Team', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 6);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 6);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ohpekgykbt', 3, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,6);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('yadiahemih', 3, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,7);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('xduygcgcqw', 3, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,8);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hsjniyfpol', 3, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,9);
INSERT INTO book_details_authors VALUES (3, 4);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('1422148009', 'The Future of Management', 'What fuels long-term business success? Not operational excellence, technology breakthroughs, or new business models, but management innovation—new ways of mobilizing talent, allocating resources, and formulating strategies. Through history, management innovation has enabled companies to cross new performance thresholds and build enduring advantages. In The Future of Management, Gary Hamel argues that organizations need management innovation now more than ever. Why? The management paradigm of the last century—centered on control and efficiency—no longer suffices in a world where adaptability and creativity drive business success. To thrive in the future, companies must reinvent management. Hamel explains how to turn your company into a serial management innovator, revealing: The make-or-break challenges that will determine competitive success in an age of relentless, head-snapping change. The toxic effects of traditional management beliefs. The unconventional management practices generating breakthrough results in “modern management pioneers.” The radical principles that will need to become part of every company’s “management DNA.” The steps your company can take now to build your “management advantage.” Practical and profound, The Future of Management features examples from Google, W.L. Gore, Whole Foods, IBM, Samsung, Best Buy, and other blue-ribbon management innovators.', 'http://books.google.com/books/content?id=gLktvtlqHSYC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2007-10-09', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (9, 10);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (14, 10);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('sjvmkvmkks', 4, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,10);
INSERT INTO book_details_authors VALUES (4, 5);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('1484236033', 'Modern C++ Design', 'Apply modern C++17 to the implementations of classic design patterns. As well as covering traditional design patterns, this book fleshes out new patterns and approaches that will be useful to C++ developers. The author presents concepts as a fun investigation of how problems can be solved in different ways, along the way using varying degrees of technical sophistication and explaining different sorts of trade-offs. Design Patterns in Modern C++ also provides a technology demo for modern C++, showcasing how some of its latest features (e.g., coroutines) make difficult problems a lot easier to solve. The examples in this book are all suitable for putting into production, with only a few simplifications made in order to aid readability. What You Will Learn Apply design patterns to modern C++ programming Use creational patterns of builder, factories, prototype and singleton Implement structural patterns such as adapter, bridge, decorator, facade and more Work with the behavioral patterns such as chain of responsibility, command, iterator, mediator and more Apply functional design patterns such as Monad and more Who This Book Is For Those with at least some prior programming experience, especially in C++.', 'http://books.google.com/books/content?id=qEBWDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2018-04-18', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 11);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 11);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hgophenqtn', 5, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,11);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('wnuujywwej', 5, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,12);
INSERT INTO book_details_authors VALUES (5, 6);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780132715812', 'Essential Linux Device Drivers', '“Probably the most wide ranging and complete Linux device driver book I’ve read.” --Alan Cox, Linux Guru and Key Kernel Developer “Very comprehensive and detailed, covering almost every single Linux device driver type.” --Theodore Ts’o, First Linux Kernel Developer in North America and Chief Platform Strategist of the Linux Foundation The Most Practical Guide to Writing Linux Device Drivers Linux now offers an exceptionally robust environment for driver development: with today’s kernels, what once required years of development time can be accomplished in days. In this practical, example-driven book, one of the world’s most experienced Linux driver developers systematically demonstrates how to develop reliable Linux drivers for virtually any device. Essential Linux Device Drivers is for any programmer with a working knowledge of operating systems and C, including programmers who have never written drivers before. Sreekrishnan Venkateswaran focuses on the essentials, bringing together all the concepts and techniques you need, while avoiding topics that only matter in highly specialized situations. Venkateswaran begins by reviewing the Linux 2.6 kernel capabilities that are most relevant to driver developers. He introduces simple device classes; then turns to serial buses such as I2C and SPI; external buses such as PCMCIA, PCI, and USB; video, audio, block, network, and wireless device drivers; user-space drivers; and drivers for embedded Linux–one of today’s fastest growing areas of Linux development. For each, Venkateswaran explains the technology, inspects relevant kernel source files, and walks through developing a complete example. • Addresses drivers discussed in no other book, including drivers for I2C, video, sound, PCMCIA, and different types of flash memory • Demystifies essential kernel services and facilities, including kernel threads and helper interfaces • Teaches polling, asynchronous notification, and I/O control • Introduces the Inter-Integrated Circuit Protocol for embedded Linux drivers • Covers multimedia device drivers using the Linux-Video subsystem and Linux-Audio framework • Shows how Linux implements support for wireless technologies such as Bluetooth, Infrared, WiFi, and cellular networking • Describes the entire driver development lifecycle, through debugging and maintenance • Includes reference appendixes covering Linux assembly, BIOS calls, and Seq files', 'http://books.google.com/books/content?id=Boo57V0IOq0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2008-03-27', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 13);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 13);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('wnfmiakjqs', 6, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,13);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('xbxokfutkp', 6, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,14);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('pqowhdazyj', 6, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,15);
INSERT INTO book_details_authors VALUES (6, 7);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780137061105', 'Embedded Linux Primer', 'Up-to-the-Minute, Complete Guidance for Developing Embedded Solutions with Linux Linux has emerged as today’s #1 operating system for embedded products. Christopher Hallinan’s Embedded Linux Primer has proven itself as the definitive real-world guide to building efficient, high-value, embedded systems with Linux. Now, Hallinan has thoroughly updated this highly praised book for the newest Linux kernels, capabilities, tools, and hardware support, including advanced multicore processors. Drawing on more than a decade of embedded Linux experience, Hallinan helps you rapidly climb the learning curve, whether you’re moving from legacy environments or you’re new to embedded programming. Hallinan addresses today’s most important development challenges and demonstrates how to solve the problems you’re most likely to encounter. You’ll learn how to build a modern, efficient embedded Linux development environment, and then utilize it as productively as possible. Hallinan offers up-to-date guidance on everything from kernel configuration and initialization to bootloaders, device drivers to file systems, and BusyBox utilities to real-time configuration and system analysis. This edition adds entirely new chapters on UDEV, USB, and open source build systems. Tour the typical embedded system and development environment and understand its concepts and components. Understand the Linux kernel and userspace initialization processes. Preview bootloaders, with specific emphasis on U-Boot. Configure the Memory Technology Devices (MTD) subsystem to interface with flash (and other) memory devices. Make the most of BusyBox and latest open source development tools. Learn from expanded and updated coverage of kernel debugging. Build and analyze real-time systems with Linux. Learn to configure device files and driver loading with UDEV. Walk through detailed coverage of the USB subsystem. Introduces the latest open source embedded Linux build systems. Reference appendices include U-Boot and BusyBox commands.', 'http://books.google.com/books/content?id=wT0_fkfLi7gC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2010-10-26', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 16);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 16);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cpqpcrwsuj', 7, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,16);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('fbszxrhyrp', 7, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,17);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('avfqfzptnx', 7, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,18);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('rjlbiowyuz', 7, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,19);
INSERT INTO book_details_authors VALUES (7, 8);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780201704341', 'More Exceptional C++', 'This text contains coverage of optimization in both single and multi threaded environments. It emphasizes generic programming and using the C++ Standard Library.', 'http://books.google.com/books/content?id=_1uD7khOQooC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2002-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 20);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 20);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ajehpkitia', 8, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,20);
INSERT INTO book_details_authors VALUES (8, 9);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780321623850', 'C++ Network Programming, vol. 1', 'As networks, devices, and systems continue to evolve, software engineers face the unique challenge of creating reliable distributed applications within frequently changing environments. C++ Network Programming, Volume 1, provides practical solutions for developing and optimizing complex distributed systems using the ADAPTIVE Communication Environment (ACE), a revolutionary open-source framework that runs on dozens of hardware platforms and operating systems. This book guides software professionals through the traps and pitfalls of developing efficient, portable, and flexible networked applications. It explores the inherent design complexities of concurrent networked applications and the tradeoffs that must be considered when working to master them. C++ Network Programming begins with an overview of the issues and tools involved in writing distributed concurrent applications. The book then provides the essential design dimensions, patterns, and principles needed to develop flexible and efficient concurrent networked applications. The book''s expert author team shows you how to enhance design skills while applying C++ and patterns effectively to develop object-oriented networked applications. Readers will find coverage of: C++ network programming, including an overview and strategies for addressing common development challenges The ACE Toolkit Connection protocols, message exchange, and message-passing versus shared memory Implementation methods for reusable networked application services Concurrency in object-oriented network programming Design principles and patterns for ACE wrapper facades With this book, C++ developers have at their disposal the most complete toolkit available for developing successful, multiplatform, concurrent networked applications with ease and efficiency.', 'http://books.google.com/books/content?id=V43ubgzakIAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2001-12-10', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 21);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (14, 21);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('nkpobuclyw', 9, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,21);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hneialovlq', 9, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,22);
INSERT INTO book_details_authors VALUES (9, 10);
INSERT INTO book_details_authors VALUES (9, 11);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780672334283', 'C++ Network Programming, vol. 2', 'Do you need to develop flexible software that can be customized quickly? Do you need to add the power and efficiency of frameworks to your software? The ADAPTIVE Communication Environment (ACE) is an open-source toolkit for building high-performance networked applications and next-generation middleware. ACE''s power and flexibility arise from object-oriented frameworks, used to achieve the systematic reuse of networked application software. ACE frameworks handle common network programming tasks and can be customized using C++ language features to produce complete distributed applications. C++ Network Programming, Volume 2, focuses on ACE frameworks, providing thorough coverage of the concepts, patterns, and usage rules that form their structure. This book is a practical guide to designing object-oriented frameworks and shows developers how to apply frameworks to concurrent networked applications. C++ Networking, Volume 1, introduced ACE and the wrapper facades, which are basic network computing ingredients. Volume 2 explains how frameworks build on wrapper facades to provide higher-level communication services. Written by two experts in the ACE community, this book contains: An overview of ACE frameworks Design dimensions for networked services Descriptions of the key capabilities of the most important ACE frameworks Numerous C++ code examples that demonstrate how to use ACE frameworks C++ Network Programming, Volume 2, teaches how to use frameworks to write networked applications quickly, reducing development effort and overhead. It will be an invaluable asset to any C++ developer working on networked applications.', 'http://books.google.com/books/content?id=u1mKwaIbLwsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2002-10-29', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 23);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 23);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('srrstpfmwu', 10, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,23);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('iawotuokbf', 10, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,24);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ebhqxfxemn', 10, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,25);
INSERT INTO book_details_authors VALUES (10, 11);
INSERT INTO book_details_authors VALUES (10, 10);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780201703535', 'Accelerated C++. Practical Programming by Example', 'Takes a practical approach to solving problems using C++. This book describes real problems and solutions, not just language features. It covers the language and standard library together.', 'http://books.google.com/books/content?id=OaVQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 26);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (9, 26);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('dqubonwpqe', 11, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,26);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('kmetlroyur', 11, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,27);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hwmbocxxbq', 11, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,28);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cbexmykace', 11, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,29);
INSERT INTO book_details_authors VALUES (11, 12);
INSERT INTO book_details_authors VALUES (11, 13);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9781591398622', 'Hard Facts', 'The best organisations have the best talent. . . Financial incentives drive company performance. . . Firms must change or die. Popular axioms like these drive business decisions every day. Yet too much common management wisdom isn’t wise at all—but, instead, flawed knowledge based on best practices that are actually poor, incomplete, or outright obsolete. Worse, legions of managers use this dubious knowledge to make decisions that are hazardous to organisational health. This practical and candid book challenges leaders to commit to evidence-based management as a way of organisational life – and shows how to finally turn this common sense into common practice.', 'http://books.google.com/books/content?id=F7m4vAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (15, 30);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (12, 30);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cnqgihbtzw', 12, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,30);
INSERT INTO book_details_authors VALUES (12, 14);
INSERT INTO book_details_authors VALUES (12, 15);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788390325262', 'Vademecum Teleinformatyka III', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 31);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 31);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('wxqgpzfnby', 13, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,31);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('meujpizkpm', 13, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,32);
INSERT INTO book_details_authors VALUES (13, 16);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0136083250', 'Clean Code. A Handbook of Agile Software Craftsmanship', 'Even bad code can function. But if code isn’t clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesn’t have to be that way. Noted software expert Robert C. Martin presents a revolutionary paradigm with Clean Code: A Handbook of Agile Software Craftsmanship . Martin has teamed up with his colleagues from Object Mentor to distill their best agile practice of cleaning code “on the fly” into a book that will instill within you the values of a software craftsman and make you a better programmer–but only if you work at it. What kind of work will you be doing? You’ll be reading code–lots of code. And you will be challenged to think about what’s right about that code, and what’s wrong with it. More importantly, you will be challenged to reassess your professional values and your commitment to your craft. Clean Code is divided into three parts. The first describes the principles, patterns, and practices of writing clean code. The second part consists of several case studies of increasing complexity. Each case study is an exercise in cleaning up code–of transforming a code base that has some problems into one that is sound and efficient. The third part is the payoff: a single chapter containing a list of heuristics and “smells” gathered while creating the case studies. The result is a knowledge base that describes the way we think when we write, read, and clean code. Readers will come away from this book understanding How to tell the difference between good and bad code How to write good code and how to transform bad code into good code How to create good names, good functions, good objects, and good classes How to format code for maximum readability How to implement complete error handling without obscuring code logic How to unit test and practice test-driven development This book is a must for any developer, software engineer, project manager, team lead, or systems analyst with an interest in producing better code.', 'http://books.google.com/books/content?id=_i6bDeoCQzsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2008-08-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (15, 33);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 33);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('nkyiywvepc', 14, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,33);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hxkosxmlya', 14, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,34);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ovxbmdcyys', 14, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,35);
INSERT INTO book_details_authors VALUES (14, 17);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0321630149', 'Continuous Integration - Improving Software Quality', 'For any software developer who has spent days in “integration hell,” cobbling together myriad software components, Continuous Integration: Improving Software Quality and Reducing Risk illustrates how to transform integration from a necessary evil into an everyday part of the development process. The key, as the authors show, is to integrate regularly and often using continuous integration (CI) practices and techniques. The authors first examine the concept of CI and its practices from the ground up and then move on to explore other effective processes performed by CI systems, such as database integration, testing, inspection, deployment, and feedback. Through more than forty CI-related practices using application examples in different languages, readers learn that CI leads to more rapid software development, produces deployable software at every step in the development lifecycle, and reduces the time between defect introduction and detection, saving time and lowering costs. With successful implementation of CI, developers reduce risks and repetitive manual processes, and teams receive better project visibility. The book covers How to make integration a “non-event” on your software development projects How to reduce the amount of repetitive processes you perform when building your software Practices and techniques for using CI effectively with your teams Reducing the risks of late defect discovery, low-quality software, lack of visibility, and lack of deployable software Assessments of different CI servers and related tools on the market The book’s companion Web site, www.integratebutton.com, provides updates and code examples.', 'http://books.google.com/books/content?id=PV9qfEdv9L0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2007-06-29', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (9, 36);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 36);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('iksfetavlj', 15, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,36);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('rejbsybjfr', 15, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,37);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ojgdalpeok', 15, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,38);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vngesmdjrk', 15, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,39);
INSERT INTO book_details_authors VALUES (15, 18);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0131177052', 'Working effectively with legacy code', 'Preface Do you remember the first program you wrote? I remember mine. It was a little graphics program I wrote on an early PC. I started programming later than most of my friends. Sure, I''d seen computers when I was a kid. I remember being really impressed by a minicomputer I once saw in an office, but for years I never had a chance to even sit at a computer. Later, when I was a teenager, some friends of mine bought a couple of the first TRS-80s. I was interested, but I was actually a bit apprehensive, too. I knew that if I started to play with computers, I''d get sucked into it. It just looked too cool. I don''t know why I knew myself so well, but I held back. Later, in college, a roommate of mine had a computer, and I bought a C compiler so that I could teach myself programming. Then it began. I stayed up night after night trying things out, poring through the source code of the emacs editor that came with the compiler. It was addictive, it was challenging, and I loved it. I hope you''ve had experiences like thismdjust the raw joy of making things work on a computer. Nearly every programmer I ask has. That joy is part of what got us into this work, but where is it day to day? A few years ago, I gave my friend Erik Meade a call after I''d finished work one night. I knew that Erik had just started a consulting gig with a new team, so I asked him, "How are they doing?" He said, "They''re writing legacy code, man." That was one of the few times in my life when I was sucker-punched by a coworker''s statement. I felt it right in my gut. Erik had given words to the precise feeling that I often get when I visit teams for the first time. They are trying very hard, but at the end of the day, because of schedule pressure, the weight of history, or a lack of any better code to compare their efforts to, many people are writing legacy code. What is legacy code? I''ve used the term without defining it. Let''s look at the strict definition: Legacy code is code that we''ve gotten from someone else. Maybe our company acquired code from another company; maybe people on the original team moved on to other projects. Legacy code is somebody else''s code. But in programmer-speak, the term means much more than that. The termlegacy codehas taken on more shades of meaning and more weight over time. What do you think about when you hear the termlegacy code? If you are at all like me, you think of tangled, unintelligible structure, code that you have to change but don''t really understand. You think of sleepless nights trying to add in features that should be easy to add, and you think of demoralization, the sense that everyone on the team is so sick of a code base that it seems beyond care, the sort of code that you just wish would die. Part of you feels bad for even thinking about making it better. It seems unworthy of your efforts. That definition of legacy code has nothing to do with who wrote it. Code can degrade in many ways, and many of them have nothing to do with whether the code came from another team. In the industry,legacy codeis often used as a slang term for difficult-to-change code that we don''t understand. But over years of working with teams, helping them get past serious code problems, I''ve arrived at a different definition. To me,legacy codeis simply code without tests. I''ve gotten some grief for this definition. What do tests have to do with whether code is bad? To me, the answer is straightforward, and it is a point that I elaborate throughout the book: Code without tests is bad code. It doesn''t matter how well written it is; it doesn''t matter how pretty or object-oriented or well-encapsulated it is. With tests, we can change the behavior of our code quickly and verifiably. Without them, we really don''t know if our code is getting better or worse. You might think that this is severe. What about clean code? If a code base is very clean and well structured, isn''t that enough? Well, make no mistake. I love clean code. I love it more than most people I know, but while clean code is good, it''s not enough. Teams take serious chances when they try to make large changes without tests. It is like doing aerial gymnastics without a net. It requires incredible skill and a clear understanding of what can happen at every step. Knowing precisely what will happen if you change a couple of variables is often like knowing whether another gymnast is going to catch your arms after you come out of a somersault. If you are on a team with code that clear, you are in a better position than most programmers. In my work, I''ve noticed that teams with that degree of clarity in all of their code are rare. They seem like a statistical anomaly. And, you know what? If they don''t have supporting tests, their code changes still appear to be slower than those of teams that do. Yes, teams do get better and start to write clearer code, but it takes a long time for older code to get clearer. In many cases, it will never happen completely. Because of this, I have no problem defining legacy code as code without tests. It is a good working definition, and it points to a solution. I''ve been talking about tests quite a bit so far, but this book is not about testing. This book is about being able to confidently make changes in any code base. In the following chapters, I describe techniques that you can use to understand code, get it under test, refactor it, and add features. One thing that you will notice as you read this book is that it is not a book about pretty code. The examples that I use in the book are fabricated because I work under nondisclosure agreements with clients. But in many of the examples, I''ve tried to preserve the spirit of code that I''ve seen in the field. I won''t say that the examples are always representative. There certainly are oases of great code out there, but, frankly, there are also pieces of code that are far worse than anything I can use as an example in this book. Aside from client confidentiality, I simply couldn''t put code like that in this book without boring you to tears and burying important points in a morass of detail. As a result, many of the examples are relatively brief. If you look at one of them and think "No, he doesn''t understandmdmy methods are much larger than that and much worse," please look at the advice that I am giving at face value and see if it applies, even if the example seems simpler. The techniques here have been tested on substantially large pieces of code. It is just a limitation of the book format that makes examples smaller. In particular, when you see ellipses (el) in a code fragment like this, you can read them as "insert 500 lines of ugly code here": m_pDispatcher->register(listener);...m_nMargins++; If this book is not about pretty code, it is even less about pretty design. Good design should be a goal for all of us, but in legacy code, it is something that we arrive at in discrete steps. In some of the chapters, I describe ways of adding new code to existing code bases and show how to add it with good design principles in mind. You can start to grow areas of very good high-quality code in legacy code bases, but don''t be surprised if some of the steps you take to make changes involve making some code slightly uglier. This work is like surgery. We have to make incisions, and we have to move through the guts and suspend some aesthetic judgment. Could this patient''s major organs and viscera be better than they are? Yes. So do we just forget about his immediate problem, sew him up again, and tell him to eat right and train for a marathon? We could, but what we really need to do is take the patient as he is, fix what''s wrong, and move him to a healthier state. He might never become an Olympic athlete, but we can''t let "best" be the enemy of "better." Code bases can become healthier and easier to work in. When a patient feels a little better, often that is the time when you can help him make commitments to a healthier life style. That is what we are shooting for with legacy code. We are trying to get to the point at which we are used to ease; we expect it and actively attempt to make code change easier. When we can sustain that sense on a team, design gets better. The techniques I describe are ones that I''ve discovered and learned with coworkers and clients over the course of years working with clients to try to establish control over unruly code bases. I got into this legacy code emphasis accidentally. When I first started working with Object Mentor, the bulk of my work involved helping teams with serious problems develop their skills and interactions to the point that they could regularly deliver quality code. We often used Extreme Programming practices to help teams take control of their work, collaborate intensively, and deliver. I often feel that Extreme Programming is less a way to develop software than it is a way to make a well-jelled work team that just happens to deliver great software every two weeks. From the beginning, though, there was a problem. Many of the first XP projects were "greenfield" projects. The clients I was seeing had significantly large code bases, and they were in trouble. They needed some way to get control of their work and start to deliver. Over time, I found that I was doing the same things over and over again with clients. This sense culminated in some work I was doing with a team in the financial industry. Before I''d arrived, they''d realized that unit testing was a great thing, but the tests that they were executing were full scenario tests that made multiple trips to a database and exercised large chunks of code. The tests were hard to write, and the team didn''t run them very often because they took so long to run. As I sat down with them to break dependencies and get smaller chunks of code under test, I had a terrible sense of deasjaag vu. It seemed that I was doing this sort of work with every team I met, and it was the sort of thing that no one really wanted to think about. It was just the grunge work that you do when you want to start working with your code in a controlled way, if you know how to do it. I decided then that it was worth really reflecting on how we were solving these problems and writing them down so that teams could get a leg up and start to make their code bases easier to live in. A note about the examples: I''ve used examples in several different programming languages. The bulk of the examples are written in Java, C++, and C. I picked Java because it is a very common language, and I included C++ because it presents some special challenges in a legacy environment. I picked C because it highlights many of the problems that come up in procedural legacy code. Among them, these languages cover much of the spectrum of concerns that arise in legacy code. However, if the languages you using are not covered in the examples, take a look at them anyway. Many of the techniques that I cover can be used in other languages, such as Delphi, Visual Basic, COBOL, and FORTRAN. I hope that you find the techniques in this book helpful and that they allow you to get back to what is fun about programming. Programming can be very rewarding and enjoyable work. If you don''t feel that in your day-to-day work, I hope that the techniques I offer you in this book help you find it and grow it on your team. Acknowledgements First of all, I owe a serious debt to my wife, Ann, and my children, Deborah and Ryan. Their love and support made this book and all of the learning that preceded it possible. I''d also like to thank "Uncle Bob" Martin, president and founder of Object Mentor. His rigorous pragmatic approach to development and design, separating the critical from the inconsequential, gave me something to latch upon about 10 years ago, back when it seemed that I was about to drown in a wave of unrealistic advice. And thanks, Bob, for giving me the opportunity to see more code and work with more people over the past five years than I ever imagined possible. I also have to thank Kent Beck, Ron Jeffries, and Ward Cunningham for offering me advice at times and teaching me a great deal about team work, design, and programming. Special thanks to all of the people who reviewed the drafts. The official reviewers were Sven Gorts, Robert C. Martin, Erik Meade, and Bill Wake; the unofficial reviewers were Dr. Robert Koss, James Grenning, Lowell Lindstrom, Micah Martin, Russ Rufer and the Silicon Valley Patterns Group, and James Newkirk. Thanks also to reviewers of the very early drafts I placed on the Internet. Their feedback significantly affected the direction of the book after I reorganized its format. I apologize in advance to any of you I may have left out. The early reviewers were: Darren Hobbs, Martin Lippert, Keith Nicholas, Phlip Plumlee, C. Keith Ray, Robert Blum, Bill Burris, William Caputo, Brian Marick, Steve Freeman, David Putman, Emily Bache, Dave Astels, Russel Hill, Christian Sepulveda, and Brian Christopher Robinson. Thanks also to Joshua Kerievsky who gave a key early review and Jeff Langr who helped with advice and spot reviews all through the process. The reviewers helped me polish the draft considerably, but if there are errors remaining, they are solely mine. Thanks to Martin Fowler, Ralph Johnson, Bill Opdyke, Don Roberts, and John Brant for their work in the area of refactoring. It has been inspirational. I also owe a special debt to Jay Packlick, Jacques Morel, and Kelly Mower of Sabre Holdings, and Graham Wright of Workshare Technology for their support and feedback. Special thanks also to Paul Petralia, Michelle Vincenti, Lori Lyons, Krista Hansing, and the rest of the team at Prentice-Hall. Thank you, Paul, for all of the help and encouragement that this first-time author needed. Special thanks also to Gary and Joan Feathers, April Roberts, Dr. Raimund Ege, David Lopez de Quintana, Carlos Perez, Carlos M. Rodriguez, and the late Dr. John C. Comfort for help and encouragement over the years.I also have to thank to Brian Button for the example in Chapter XX,I''m Changing the Same Code All Over the Place. He wrote that code in about an hour when we were developing a refactoring course together, and it''s become my favorite piece of teaching code. Also, special thanks to Janik Top, whose instrumentalDe Futuraserved as the soundtrack for my last few weeks of work on this book. Finally, I''d like to thank everyone whom I''ve worked with over the past few years whose insights and challenges strengthened the material in this book. Michael Feathers mfeathers@objectmentor.com © Copyright Pearson Education. All rights reserved.', 'http://books.google.com/books/content?id=vlo_nWophSYC&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 40);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 40);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('wsjmvppbbk', 16, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,40);
INSERT INTO book_details_authors VALUES (16, 19);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780130676344', 'Agile Software Development with Scrum', 'Arguably the most important book about managing technology and systems development efforts, this book describes building systems using the deceptively simple process, Scrum. Readers will come to understand a new approach to systems development projects that cuts through the complexity and ambiguity of complex, emergent requirements and unstable technology to iteratively and quickly produce quality software. BENEFITS Learn how to immediately start producing software incrementally regardless of existing engineering practices or methodologies Learn how to simplify the implementation of Agile processes Learn how to simplify XP implementation through a Scrum wrapper Learn why Agile processes work and how to manage them Understand the theoretical underpinnings of Agile processes', 'http://books.google.com/books/content?id=BpFYAAAAYAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 41);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 41);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('mnjpfkhqjx', 17, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,41);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('qzatgfxtxo', 17, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,42);
INSERT INTO book_details_authors VALUES (17, 20);
INSERT INTO book_details_authors VALUES (17, 21);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0132797461', 'xUnit Test Patterns - Refactoring, Test Code', 'Automated testing is a cornerstone of agile development. An effective testing strategy will deliver new functionality more aggressively, accelerate user feedback, and improve quality. However, for many developers, creating effective automated tests is a unique and unfamiliar challenge. xUnit Test Patterns is the definitive guide to writing automated tests using xUnit, the most popular unit testing framework in use today. Agile coach and test automation expert Gerard Meszaros describes 68 proven patterns for making tests easier to write, understand, and maintain. He then shows you how to make them more robust and repeatable--and far more cost-effective. Loaded with information, this book feels like three books in one. The first part is a detailed tutorial on test automation that covers everything from test strategy to in-depth test coding. The second part, a catalog of 18 frequently encountered "test smells," provides trouble-shooting guidelines to help you determine the root cause of problems and the most applicable patterns. The third part contains detailed descriptions of each pattern, including refactoring instructions illustrated by extensive code samples in multiple programming languages.', 'http://books.google.com/books/content?id=-izOiCEIABQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2007-05-21', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 43);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 43);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('uizsksynoo', 18, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,43);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('gsjfjzlrkn', 18, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,44);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vfctmnsxkd', 18, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,45);
INSERT INTO book_details_authors VALUES (18, 22);
INSERT INTO book_details (isbn, title, cover_picture_url, publication_date, is_removable) VALUES ('9788320426724',  'Agile Retrospectives. Making Good Teams Great', 'http://books.google.com/books/content?id=03KKAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2002-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 46);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 46);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('spaaigauvm', 19, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,46);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('acrkvvhbvr', 19, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,47);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('amnrezwyrt', 19, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,48);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('lfkrfevlix', 19, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,49);
INSERT INTO book_details_authors VALUES (19, 23);
INSERT INTO book_details_authors VALUES (19, 24);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0321146530', 'Test-Driven Development: By Example', 'Write clean code that works with the help of this groundbreaking software method. Example-driven teaching is the basis of Beck''s step-by-step instruction that will have readers using TDD to further their projects.', 'http://books.google.com/books/content?id=CUlsAQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 50);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 50);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('fffekawexe', 20, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,50);
INSERT INTO book_details_authors VALUES (20, 25);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9788324637416', 'Designing Interfaces: Patterns for Effective Interaction Design', 'Najwa?niejsze jest pierwsze wra?enie! Mimo istnienia ogromnej ilo?ci narz?dzi do tworzenia interfejsow u?ytkownika projektowanie dobrych interfejsow aplikacji wci nie jest ?atwe. Ta bestsellerowa ksi ka jest jednym z niewielu wiarygodnych ?rode?, ktore pomog? Ci przej przez istny labirynt wariantow projektowych. ""Projektowanie interfejsow"" przedstawia najlepsze praktyki i gotowe do wdro?enia pomys?y w postaci wzorcow UI oraz dostarcza rozwi?za? powszechnych problemow w dziedzinie projektowania. Rozwi?zania te mo?esz ?atwo dostosowa? do sytuacji, w jakiej si? znajdujesz. W niniejszym zaktualizowanym wydaniu znajdziesz wzorce do wykorzystania zarowno w aplikacjach mobilnych i mediach spo?eczno?ciowych, jak i w aplikacjach internetowych czy programach komputerowych. Ka?dy wzorzec zilustrowany jest przyk?adowymi projektami oraz opatrzony praktycznymi poradami, z ktorych mo?esz natychmiast skorzysta?. Do?wiadczeni projektanci mog? u?ywa? tego przewodnika jako ?rod?a pomys?ow, za? pocz?tkuj?cy mog? go potraktowa? jak map? w drodze przez ?wiat projektowania interfejsow i interakcji.Tworz porywaj?ce i praktyczne interfejsy - pewnie, a nie po omackuPoznaj trudne do interpretacji koncepcje projektowania: afordancje, hierarchi? wizualn?, odleg?o nawigacyjn? oraz wykorzystanie kolorowZapoznaj si? z rekomendacjami poszczegolnych wzorcow UI, a tak?e z wzorcami zast?pczymi i poradami, kiedy pewnych wzorcow nie nale?y u?ywa? cz i zestawiaj wzorce interfejsu wed?ug upodoba?Dopie wygl?d i dzia?anie interfejsow dzi?ki wykorzystaniu zasad projektowania graficznego oraz wzorcowU?ytkownicy wybieraj? atrakcyjne i praktyczne interfejsy!', 'http://books.google.com/books/content?id=79poMwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2012-08-12', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 51);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 51);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('rosjltyzju', 21, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,51);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hpyskiwzrt', 21, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,52);
INSERT INTO book_details_authors VALUES (21, 26);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788320426335', 'Oprogramowanie komponentowe, obiekty to za mało', '2001-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 53);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 53);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('jvdmvcqwzc', 22, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,53);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('tzaqfoqjxw', 22, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,54);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('bxhydkzpxs', 22, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,55);
INSERT INTO book_details_authors VALUES (22, 27);
INSERT INTO book_details (isbn, title, cover_picture_url, publication_date, is_removable) VALUES ('9788320431100',  'Refactoring: Improving the Design of Existing Code', 'http://books.google.com/books/content?id=IWK-AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2006-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (13, 56);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 56);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hcpvircfqe', 23, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,56);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('sonzkglnbb', 23, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,57);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('sjoczcbjxv', 23, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,58);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('dmmlmfxkmw', 23, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,59);
INSERT INTO book_details_authors VALUES (23, 25);
INSERT INTO book_details_authors VALUES (23, 28);
INSERT INTO book_details_authors VALUES (23, 29);
INSERT INTO book_details_authors VALUES (23, 30);
INSERT INTO book_details_authors VALUES (23, 31);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780132702256', 'Java Concurrency in Practice', 'Threads are a fundamental part of the Java platform. As multicore processors become the norm, using concurrency effectively becomes essential for building high-performance applications. Java SE 5 and 6 are a huge step forward for the development of concurrent applications, with improvements to the Java Virtual Machine to support high-performance, highly scalable concurrent classes and a rich set of new concurrency building blocks. In Java Concurrency in Practice , the creators of these new facilities explain not only how they work and how to use them, but also the motivation and design patterns behind them. However, developing, testing, and debugging multithreaded programs can still be very difficult; it is all too easy to create concurrent programs that appear to work, but fail when it matters most: in production, under heavy load. Java Concurrency in Practice arms readers with both the theoretical underpinnings and concrete techniques for building reliable, scalable, maintainable concurrent applications. Rather than simply offering an inventory of concurrency APIs and mechanisms, it provides design rules, patterns, and mental models that make it easier to build concurrent programs that are both correct and performant. This book covers: Basic concepts of concurrency and thread safety Techniques for building and composing thread-safe classes Using the concurrency building blocks in java.util.concurrent Performance optimization dos and don''ts Testing concurrent programs Advanced topics such as atomic variables, nonblocking algorithms, and the Java Memory Model', 'http://books.google.com/books/content?id=EK43StEVfJIC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2006-05-09', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 60);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 60);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('bdecgpfcsv', 24, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,60);
INSERT INTO book_details_authors VALUES (24, 32);
INSERT INTO book_details_authors VALUES (24, 33);
INSERT INTO book_details_authors VALUES (24, 34);
INSERT INTO book_details_authors VALUES (24, 35);
INSERT INTO book_details_authors VALUES (24, 36);
INSERT INTO book_details_authors VALUES (24, 37);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0000000000', 'Thinking in C++, tom 2', null, 'http://books.google.com/books/content?id=_q6R5xJ6IAAC&printsec=frontcover&img=1&zoom=1&source=gbs_api', null, false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 61);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 61);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('dzgcnkgjac', 25, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,61);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('igugygpake', 25, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,62);
INSERT INTO book_details_authors VALUES (25, 38);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788373660359', 'Symfonia C++', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 63);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 63);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hgpsvyifng', 26, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,63);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vujcuabtgs', 26, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,64);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('nygiuxyjgr', 26, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,65);
INSERT INTO book_details_authors VALUES (26, 39);
INSERT INTO book_details (isbn, title, cover_picture_url, publication_date, is_removable) VALUES ('8324643362',  'Szkoła programowania, Język C++', 'http://books.google.com/books/content?id=GmZ6xMRYUdwC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 66);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 66);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('qkgeuomskh', 27, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,66);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('rnsngagiym', 27, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,67);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ecbyoiepuo', 27, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,68);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('dpgubqwugo', 27, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,69);
INSERT INTO book_details_authors VALUES (27, 40);
INSERT INTO book_details (isbn, title, cover_picture_url, publication_date, is_removable) VALUES ('9783898642804',  'Practical Qt', 'http://books.google.com/books/content?id=gX2AAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 70);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (9, 70);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('uteenojamv', 28, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,70);
INSERT INTO book_details_authors VALUES (28, 41);
INSERT INTO book_details_authors VALUES (28, 42);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('8372953791', 'Programming with Qt, 2nd edition, Covers Qt3', 'Konflikt Wieków - część 5', 'http://books.google.com/books/content?id=ALplDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', null, false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 71);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 71);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('gutimvmzro', 29, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,71);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('lhhpgdtcmk', 29, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,72);
INSERT INTO book_details_authors VALUES (29, 42);
INSERT INTO book_details (isbn, title, cover_picture_url, publication_date, is_removable) VALUES ('9788378500629',  'Język C++ Standardy kodowania', 'http://books.google.com/books/content?id=kR4loG9q_tYC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2013-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (15, 73);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 73);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('nsyswkyzbw', 30, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,73);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vxukskygbd', 30, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,74);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('royccsesmu', 30, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,75);
INSERT INTO book_details_authors VALUES (30, 6);
INSERT INTO book_details_authors VALUES (30, 9);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0307484351', 'Essential C++', 'Childbirth is a life-altering experience for any woman, but a Cesarean delivery can be overwhelming, whether it’s unexpected or planned. Despite the fact that roughly one in four babies in the United States is delivered by c-section, very little information about the experience is included in typical pregnancy books and physicians and childbirth educators often gloss over the details. The Essential C-Section Guide is written not only for women to read in preparation for a scheduled c-section and for those considered “high risk” who know that a c-section may become necessary but also for women recovering from an unexpected surgical delivery. This book provides answers to important questions about what the surgery entails, what a woman can expect as she recovers, and what considerations should be made for future pregnancies and deliveries. With frank discussions about the physical and emotional aspects surrounding a c-section, the authors share comforting wisdom about early bonding, pain control, breastfeeding, infant care, healing from surgery, postpartum exercise, partner involvement, and much more, in detail not available anywhere else. Written by authors who have firsthand knowledge of birth by c-section, The Essential C-Section Guide is well-researched and addresses its unique concerns with intelligence and compassion. www.broadwaybooks.com', 'http://books.google.com/books/content?id=ZrYjMSIQd8oC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2008-12-10', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 76);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 76);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ehhbzzvgiz', 31, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,76);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cnkleknjbo', 31, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,77);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hmafzcybam', 31, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,78);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('firrrkuivt', 31, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,79);
INSERT INTO book_details_authors VALUES (31, 43);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780470848494', 'Large-scale Software Architecture (A parctical guide using UML)', 'The purpose of large-scale software architecture is to capture and describe practical representations to make development teams more effective. In this book the authors show how to utilise software architecture as a tool to guide the development instead of capturing the architectural details after all the design decisions have been made. * Offers a concise description of UML usage for large-scale architecture * Discusses software architecture and design principles * Technology and vendor independent', 'http://books.google.com/books/content?id=jmPXtAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 80);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 80);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('alvmqskwnt', 32, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,80);
INSERT INTO book_details_authors VALUES (32, 44);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780789728685', 'SOLARIS 8, Sparc Platform Edition for Sun Computers Systems', 'Offers test-taking strategies and tips, practice questions, and a cram sheet.', 'http://books.google.com/books/content?id=ZqhJLzdftb8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 81);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (15, 81);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vfrpgcusjm', 33, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,81);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ybiwcjvyza', 33, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,82);
INSERT INTO book_details_authors VALUES (33, 45);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780201633740', 'CDMA Principles of Spread Spectrum Communication', 'Spread spectrum multiple access communication, known commercially as CDMA (Code Division Multiple Access), is a driving technology behind the rapidly advancing personal communications industry. Its greater bandwidth efficiency and multiple access capabilities make it the leading technology for relieving spectrum congestion caused by the explosion in popularity of cellular mobile and fixed wireless telephones and wireless data terminals. Written by a leader in the creation of CDMA and an internationally recognized authority on wireless digital communication, this book gives you the technical information you need. It presents the fundamentals of digital communications and covers all aspects of commercial direct-sequence spread spectrum technology, incorporating both physical-level principles and network concepts. You will find detailed information on signal generation, synchronization, modulation, and coding of direct-sequence spread spectrum signals. In addition, the book shows how these physical layer functions relate to link and network properties involving cellular coverage, Erlang capacity, and network control. With this book, you will attain a deeper understanding of personal communications system concepts and will be better equipped to develop systems and products at the forefront of the personal wireless communications market.', 'http://books.google.com/books/content?id=eSdvQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 83);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 83);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ncdvbzapso', 34, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,83);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('uxrupkldph', 34, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,84);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('xdhdoryoly', 34, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,85);
INSERT INTO book_details_authors VALUES (34, 46);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780080923192', '3G Evolution: HSPA and LTE for Mobile Broadband', 'Reflecting the recent completion of LTE’s specification, the new edition of this bestseller has been fully updated to provide a complete picture of the LTE system. The latest LTE standards are included on the radio interface architecture, the physical layer, access procedures, MBMS, together with three brand new chapters on LTE Transmission Procedures, Flexible Bandwidth in LTE and LTE evolution into IMT-Advanced. Key technologies presented include multi-carrier transmission, advanced single-carrier transmission, advanced receivers, OFDM, MIMO and adaptive antenna solutions, advanced radio resource management and protocols, and different radio network architectures. Their role and use in the context of mobile broadband access in general is explained. Both a high-level overview and more detailed step-by-step explanations of HSPA and LTE implementation are given. An overview of other related systems such as TD SCDMA, CDMA2000, and WiMAX is also provided. The new edition has up-to-date coverage of the recently published LTE Release 8 radio-access standard, giving the reader insight into the ongoing and future process of LTE and LTE-Advanced standardisation. Coverage on LTE in this edition includes ( total of 270 pages on LTE): Easy-to-access overview of the LTE protocol layers Complete description of LTE physical layer including reference signals, control signalling, multi-antenna transmission schemes Covers both FDD and TDD, their fundamental difference and their impact on the LTE design Detailed description of access procedures including cell search, random access, broadcast of system information Transmission procedures, including retransmission protocols, scheduling, uplink power control Evolution towards IMT-Advanced ("4G") "Reading a specification requires some effort. After reading the spec, you would know WHAT to transmit, but not WHY and HOW. This is where our book becomes important. Not only does it provide an easy-to-read description of the signals, procedures, and mechanisms in LTE, it also tells you WHY a certain signal, channel or procedure is present and HOW it is used. After reading the book, you will have a good understanding on how LTE works and why it is designed the way it is." - the authors The authors of the book all work at Ericsson Research and are deeply involved in 3G development and standardisation since the early days of 3G research. They are leading experts in the field and are today still actively contributing to the standardisation of both HSPA and LTE within 3GPP. This includes details of the standards and technologies (160 new pages): LTE radio interface architecture, LTE physical layer and LTE access procedures. Includes details of the standards and technologies (160 new pages): LTE radio interface architecture, LTE physical layer and LTE access procedures Contains three brand new chapters on LTE: Transmission Procedures, Flexible Bandwidth and LTE Evolution and expanded details on the physical layer (total LTE content is 270 pages) Examines the latest developments in the evolution of LTE into IMT-Advanced, the next stage of 3G Evolution Gives clear explanations of the role of OFDM and MIMO technologies in HSPA and LTE Outlines the System Architecture Evolution (SAE) supporting LTE and HSPA evolution', 'http://books.google.com/books/content?id=cmMgp4j23D0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2010-07-28', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 86);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 86);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('gfxmvjtuvh', 35, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,86);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('gahagiqqsy', 35, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,87);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('mcewoyginb', 35, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,88);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ggtzdhbfgu', 35, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,89);
INSERT INTO book_details_authors VALUES (35, 47);
INSERT INTO book_details_authors VALUES (35, 48);
INSERT INTO book_details_authors VALUES (35, 49);
INSERT INTO book_details_authors VALUES (35, 50);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0000000000', 'Tektronix K1297-G20, June, 2000', null, 'http://books.google.com/books/content?id=6ZuKZ-nbynkC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', null, false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (4, 90);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 90);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cvbdjiyoro', 36, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,90);
INSERT INTO book_details_authors VALUES (36, 51);
INSERT INTO book_details_authors VALUES (36, 52);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780470723661', 'Evolved Packet System (EPS); The LTE an SAE evolution of 3G UMTS', '2G/GSM and 3G/UMTS are key mobile communication technologies, chosen by more than 2 billion people around the world. In order to adapt to new services, increasing demand for user bandwidth, quality of service and requirements for network convergence, major evolutions are introduced in 3G network standard. Evolved Packet System (EPS) presents the EPS evolution of the 3G/UMTS standard introduced by the 3rd Generation Partnership Project (3GPP) standard committee. This new topic is looked at from a system perspective, from the radio interface to network and service architecture. Hundreds of documents being issued by Standard organisations are summarised in one book to allow the reader to get an accessible comprehensive view of EPS evolution. Proposes a system view of Evolved UMTS, from the radio to Core and service architecture Gives a comprehensive and global view of the system that technical specifications do not provide Describes the new system as well as the inheritance and migration from 2G/GSM and 3G/UMTS Written by experts in the field who specialise in two complementary but very different technical domains (i.e. "radio interface" and "network architecture") Contains many figures and examples for better understanding. This book is essential for industry professionals in the telecommunication business, telecommunication system architects and designers, product manufacturers and operators and postgraduate students.', 'http://books.google.com/books/content?id=gXAuo6c72nkC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2008-02-28', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 91);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 91);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('aipiyyoiez', 37, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,91);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('efmsjcgjre', 37, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,92);
INSERT INTO book_details_authors VALUES (37, 53);
INSERT INTO book_details_authors VALUES (37, 54);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('836517068X', 'Motywacja pod lupą', 'Dlaczego mimo przełomowych odkryć w dziedzinie zdrowia i medycyny, jesteśmy coraz bardziej chorzy? Dlaczego tak wiele kobiet umiera w trakcie porodu? Dlaczego zmagamy się z problemem otyłości wśród dzieci? W dobie zmian klimatycznych, alergii i otyłości, konsumenci podzielili się na tych, którzy starają się wrócić do natury, dbać o środowisko i jedzenie, które spożywają, oraz tych, którzy zachłysnęli się postępem technologicznym i to w nim upatrują nadziei na przedłużenie życia i poprawę zdrowia. Wychowany przez parę hipisów Nathanael Johnson twierdzi, że oba podejścia, praktykowane w ortodoksyjnej formie, mogą być szkodliwe, a nawet śmiertelne. Oto napisana lekkim, barwnym i dowcipnym językiem książka dla wszystkich tych, którym ekologiczny styl życia jest bliski, ale nie chcą popaść w paranoję i zostać ekoświrami. Pełna bezstronnych informacji o organicznej żywności, pasteryzacji mleka, naturalnych metodach wzmacniania zdrowia, porodach, szczepieniach i diecie bogatej w warzywa. Johnson na własną rękę sprawdza powszechne przekonania z obu stron barykady: sprawdza, czy naturalny poród w domu może być ryzykowny dla rodzącej lub dziecka, czy uprawa ekologicznych warzyw jest możliwa, a także, czy szczepionki mogą zagrażać życiu dzieci. Próbując odpowiedzieć na pytanie, czy rozwijająca się technika i osiągnięcia nauki przybliżają nas czy oddalają od zdrowia, obala wiele mitów o zdrowym stylu życia i podsuwa najrozsądniejsze rozwiązania. Dochodzenie Johnsona jest porywające już od pierwszych stron książki, a wnioski z niego płynące staną się prawdziwym oparciem i pomocą dla wszystkich, którzy chcą żyć zdrowiej zachowując rozsądek i umiar.', 'http://books.google.com/books/content?id=VvmgCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2016-02-25', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 93);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 93);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('sdkribroro', 38, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,93);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('otfomboiir', 38, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,94);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('hhgnvsmiqg', 38, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,95);
INSERT INTO book_details_authors VALUES (38, 55);
INSERT INTO book_details_authors VALUES (38, 56);
INSERT INTO book_details_authors VALUES (38, 57);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('013211917X', 'The Pragmatic Programmer', 'What others in the trenches say about The Pragmatic Programmer... “The cool thing about this book is that it’s great for keeping the programming process fresh. The book helps you to continue to grow and clearly comes from people who have been there.” —Kent Beck, author of Extreme Programming Explained: Embrace Change “I found this book to be a great mix of solid advice and wonderful analogies!” —Martin Fowler, author of Refactoring and UML Distilled “I would buy a copy, read it twice, then tell all my colleagues to run out and grab a copy. This is a book I would never loan because I would worry about it being lost.” —Kevin Ruland, Management Science, MSG-Logistics “The wisdom and practical experience of the authors is obvious. The topics presented are relevant and useful.... By far its greatest strength for me has been the outstanding analogies—tracer bullets, broken windows, and the fabulous helicopter-based explanation of the need for orthogonality, especially in a crisis situation. I have little doubt that this book will eventually become an excellent source of useful information for journeymen programmers and expert mentors alike.” —John Lakos, author of Large-Scale C++ Software Design “This is the sort of book I will buy a dozen copies of when it comes out so I can give it to my clients.” —Eric Vought, Software Engineer “Most modern books on software development fail to cover the basics of what makes a great software developer, instead spending their time on syntax or technology where in reality the greatest leverage possible for any software team is in having talented developers who really know their craft well. An excellent book.” —Pete McBreen, Independent Consultant “Since reading this book, I have implemented many of the practical suggestions and tips it contains. Across the board, they have saved my company time and money while helping me get my job done quicker! This should be a desktop reference for everyone who works with code for a living.” —Jared Richardson, Senior Software Developer, iRenaissance, Inc. “I would like to see this issued to every new employee at my company....” —Chris Cleeland, Senior Software Engineer, Object Computing, Inc. “If I’m putting together a project, it’s the authors of this book that I want. . . . And failing that I’d settle for people who’ve read their book.” —Ward Cunningham Straight from the programming trenches, The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process--taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you''ll learn how to Fight software rot; Avoid the trap of duplicating knowledge; Write flexible, dynamic, and adaptable code; Avoid programming by coincidence; Bullet-proof your code with contracts, assertions, and exceptions; Capture real requirements; Test ruthlessly and effectively; Delight your users; Build teams of pragmatic programmers; and Make your developments more precise with automation. Written as a series of self-contained sections and filled with entertaining anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best practices and major pitfalls of many different aspects of software development. Whether you''re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you''ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You''ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You''ll become a Pragmatic Programmer.', 'http://books.google.com/books/content?id=5wBQEp6ruIAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '1999-10-20', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 96);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (12, 96);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('szbzazfaag', 39, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,96);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ntbgjxwvzu', 39, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,97);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('fivrdullyl', 39, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,98);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('vlufspnpbd', 39, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,99);
INSERT INTO book_details_authors VALUES (39, 58);
INSERT INTO book_details_authors VALUES (39, 59);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('UOM:39015032155163', 'ATM Networks, concepts, protocols, applications', 'This new edition of a popular book offers a strengthened focus on one of the hottest networking strategies: ATM (Asynchronous Transfer Mode). ATM is one of the industry''s current fast-moving topics, with multi-million-dollar investments being made at a time when the technology is still being debated.', 'http://books.google.com/books/content?id=tgBTAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '1994-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 100);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 100);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('tarkosuaoh', 40, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,100);
INSERT INTO book_details_authors VALUES (40, 60);
INSERT INTO book_details_authors VALUES (40, 61);
INSERT INTO book_details_authors VALUES (40, 62);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0134051998', 'Extreme Programming Explained. Embrace Change', 'Accountability. Transparency. Responsibility. These are not words that are often applied to software development. In this completely revised introduction to Extreme Programming (XP), Kent Beck describes how to improve your software development by integrating these highly desirable concepts into your daily development process. The first edition of Extreme Programming Explained is a classic. It won awards for its then-radical ideas for improving small-team development, such as having developers write automated tests for their own code and having the whole team plan weekly. Much has changed in five years. This completely rewritten second edition expands the scope of XP to teams of any size by suggesting a program of continuous improvement based on: Five core values consistent with excellence in software development Eleven principles for putting those values into action Thirteen primary and eleven corollary practices to help you push development past its current business and technical limitations Whether you have a small team that is already closely aligned with your customers or a large team in a gigantic or multinational organization, you will find in these pages a wealth of ideas to challenge, inspire, and encourage you and your team members to substantially improve your software development. You will discover how to: Involve the whole team–XP style Increase technical collaboration through pair programming and continuous integration Reduce defects through developer testing Align business and technical decisions through weekly and quarterly planning Improve teamwork by setting up an informative, shared workspace You will also find many other concrete ideas for improvement, all based on a philosophy that emphasizes simultaneously increasing the humanity and effectiveness of software development. Every team can improve. Every team can begin improving today. Improvement is possible–beyond what we can currently imagine. Extreme Programming Explained, Second Edition, offers ideas to fuel your improvement for years to come.', 'http://books.google.com/books/content?id=-DNcBAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2004-11-17', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (9, 101);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 101);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('kwfdfnvaky', 41, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,101);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('pukenyjrec', 41, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,102);
INSERT INTO book_details_authors VALUES (41, 63);
INSERT INTO book_details_authors VALUES (41, 25);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0470893885', 'Overcoming the Five dysunctions of a team a field guide', 'In the years following the publication of Patrick Lencioni’s best-seller The Five Dysfunctions of a Team, fans have been clamoring for more information on how to implement the ideas outlined in the book. In Overcoming the Five Dysfunctions of a Team, Lencioni offers more specific, practical guidance for overcoming the Five Dysfunctions—using tools, exercises, assessments, and real-world examples. He examines questions that all teams must ask themselves: Are we really a team? How are we currently performing? Are we prepared to invest the time and energy required to be a great team? Written concisely and to the point, this guide gives leaders, line managers, and consultants alike the tools they need to get their teams up and running quickly and effectively.', 'http://books.google.com/books/content?id=BgxhthIzGTMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2010-06-03', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (2, 103);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 103);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('nzwvaeofef', 42, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,103);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('pvwfzoiisp', 42, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,104);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('wxzlmvdjak', 42, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,105);
INSERT INTO book_details_authors VALUES (42, 4);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9787302104353', 'The Art of Assembly Language', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (11, 106);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 106);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('clzhubwmqh', 43, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,106);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('cclvziutjy', 43, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,107);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('iiwetmuxew', 43, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,108);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ynsdgwgisb', 43, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,109);
INSERT INTO book_details_authors VALUES (43, 64);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788320425536', 'The Art of Computer Programming vol.1 (Fundamental Algorithms 3rd ed.)', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 110);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (10, 110);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('zmyrycyoji', 44, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,110);
INSERT INTO book_details_authors VALUES (44, 65);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780201038224', 'The Art of Computer Programming vol.2 (Seminumerical Algorithms 3rd ed.)', 'V.1 - Fundamentals algorithms: Basic concepts. Algorithms. Mathematical preliminaries. MIX. Some fundamental programming techniques. Information structures. Linear lists. Trees. Multilinked structures. Dynamic storage allocation. History and bibliography. Random numbers. Generating uniform random numbers. Statistical tests. Other types of random quantities. What is a random sequence? Summary. Arithmetic. Positional number systems. Floating-point arithmetic. Multiple-precision arithmetic. Radix conversion. Rational arithmetic. Polynomial arithmetic. Manipulation of power series. v. 2. Seminumerical algorithms. Random numbers. Arithmetic.', 'http://books.google.com/books/content?id=voVQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 111);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (15, 111);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('kcficasobi', 45, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,111);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('pkdbijtrsu', 45, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,112);
INSERT INTO book_details_authors VALUES (45, 65);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('0321635787', 'The Art of Computer Programming vol.3 (Sorting and Searching 2nd ed.)', 'The bible of all fundamental algorithms and the work that taught many of today''s software developers most of what they know about computer programming. —Byte, September 1995 I can''t begin to tell you how many pleasurable hours of study and recreation they have afforded me! I have pored over them in cars, restaurants, at work, at home... and even at a Little League game when my son wasn''t in the line-up. —Charles Long If you think you''re a really good programmer... read [Knuth''s] Art of Computer Programming... You should definitely send me a resume if you can read the whole thing. —Bill Gates It''s always a pleasure when a problem is hard enough that you have to get the Knuths off the shelf. I find that merely opening one has a very useful terrorizing effect on computers. —Jonathan Laventhol The first revision of this third volume is the most comprehensive survey of classical computer techniques for sorting and searching. It extends the treatment of data structures in Volume 1 to consider both large and small databases and internal and external memories. The book contains a selection of carefully checked computer methods, with a quantitative analysis of their efficiency. Outstanding features of the second edition include a revised section on optimum sorting and new discussions of the theory of permutations and of universal hashing.', 'http://books.google.com/books/content?id=cYULBAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '1998-04-24', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (14, 113);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (3, 113);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('agvogvjqox', 46, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,113);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('mwwguqsdza', 46, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,114);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('mpttlgipev', 46, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,115);
INSERT INTO book_details_authors VALUES (46, 65);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('UCSC:32106018083763', 'Fit for developing software. Framework for Integrated Tests', 'Provides information on using the Fit open source testing framework.', 'http://books.google.com/books/content?id=x20hAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (7, 116);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (1, 116);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('fqjnqtbudf', 47, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,116);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('qbuwirlzar', 47, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,117);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('ljgdzmkoyq', 47, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,118);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('urowtpkhcn', 47, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,119);
INSERT INTO book_details_authors VALUES (47, 66);
INSERT INTO book_details_authors VALUES (47, 67);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9789814033589', 'Computer organization and Design. The Hardware/Software interface', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (12, 120);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (5, 120);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('tpsvfzsekn', 48, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,120);
INSERT INTO book_details_authors VALUES (48, 68);
INSERT INTO book_details_authors VALUES (48, 69);
INSERT INTO book_details (isbn, title, publication_date, is_removable) VALUES ('9788320433562', 'Programming Embedded Systems 2nd Edition', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 121);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (8, 121);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('jhjfyxfgrd', 49, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,121);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('qhkpgiziyo', 49, 1, 8);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (8 ,122);
INSERT INTO book_details_authors VALUES (49, 70);
INSERT INTO book_details (isbn, title, description, cover_picture_url, publication_date, is_removable) VALUES ('9780321125187', 'C++ Gotchas: Avoiding Common Problems in Coding and Design', 'Corpus linguistics is a research approach to investigate the patterns of language use empirically, based on analysis of large collections of natural texts. While corpus-based analysis has had relatively little influence on theoretical linguistics, it has revolutionized the study of language variation and use: what speakers and writers actually do with the lexical and grammatical resources of a language. Corpus-based research employs the research methods of quantitative and qualitative social science to investigate language use patterns empirically. This four-volume collection is organized around linguistic research questions that can be investigated from a corpus perspective and includes amongst others studies of individual words, comparisons of supposedly synonymous words, studies of grammatical variation, and sociolinguistic studies of dialects, registers, styles, and world varieties. Corpus-based analysis has also proven to be important for the study of historical change.', 'http://books.google.com/books/content?id=L5ZbzVnpkXAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api', '2015-01-01', false);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 123);
INSERT INTO book_details_categorie (category_id, book_details_id) VALUES (6, 123);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('bxylgnukvf', 50, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,123);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('shgtlkcahc', 50, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,124);
INSERT INTO book (signature, book_details_id, book_status_id, current_owner_id) VALUES ('kixifxynie', 50, 1, 7);
INSERT INTO book_owner_id (owner_id, book_id) VALUES (7 ,125);
INSERT INTO book_details_authors VALUES (50, 71);
